name: 🐳 Spin Docker Container

on:
  workflow_dispatch:
    inputs:
      container_name:
        description: "Container name"
        required: true
        default: "my-container"

      base_image:
        description: "Base image (e.g., python:3.10-slim)"
        required: true
        default: "python:3.10-slim"

      install_python:
        description: "Install Python (if base image lacks it)"
        required: false
        default: "false"
        type: choice
        options: ["true", "false"]

      install_node:
        description: "Install Node.js"
        required: false
        default: "false"
        type: choice
        options: ["true", "false"]

      install_go:
        description: "Install Golang"
        required: false
        default: "false"
        type: choice
        options: ["true", "false"]

      pip_packages:
        description: "Pip packages (space-separated)"
        required: false
        default: "flask requests"

      expose_port:
        description: "Host port to expose"
        required: false
        default: "8080"

      clean_existing:
        description: "Remove container if it already exists"
        required: false
        default: "true"
        type: choice
        options: ["true", "false"]

jobs:
  spin-container:
    runs-on: [self-hosted, macos]
    steps:
      - name: 📂 Checkout Repo
        uses: actions/checkout@v4

      - name: ✅ Check for Docker & Compose
        run: |
          if ! command -v docker &> /dev/null; then
            echo "[ERROR] ❌ Docker is not installed."; exit 1
          fi
          if ! command -v docker-compose &> /dev/null; then
            echo "[ERROR] ❌ Docker Compose is not installed."; exit 1
          fi
          echo "[OK] ✅ Docker and Compose are available"

      - name: 🧼 Clean Existing Container (if any)
        if: ${{ github.event.inputs.clean_existing == 'true' }}
        run: |
          docker rm -f ${{ github.event.inputs.container_name }} 2>/dev/null || echo "No existing container to remove"

      - name: 🛠️ Build Docker Compose File
        run: |
          python3 scripts/build_docker_compose.py \
            --container-name "${{ github.event.inputs.container_name }}" \
            --base-image "${{ github.event.inputs.base_image }}" \
            --install-python "${{ github.event.inputs.install_python }}" \
            --install-node "${{ github.event.inputs.install_node }}" \
            --install-go "${{ github.event.inputs.install_go }}" \
            --pip-packages "${{ github.event.inputs.pip_packages }}" \
            --expose-port "${{ github.event.inputs.expose_port }}"

      - name: 🚀 Docker Compose Up
        working-directory: containers/${{ github.event.inputs.container_name }}
        run: docker-compose up -d

      - name: 📋 Show Logs
        run: docker logs ${{ github.event.inputs.container_name }}
